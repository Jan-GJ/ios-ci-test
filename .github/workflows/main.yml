name: Backend and iOS Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: macos-latest
    
  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    container: node:10.18-jessie

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_DB: friends_db
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Start Backend
        run: |
          cd backend
          npm install
          # npm migrate + insert test data
          npm start &

      - name: Build iOS App
        run: |
          cd Frontend
           xcodebuild -project frontend.xcodeproj -scheme frontend build CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO

      - name: Run Xcode Tests
        run: |
          cd Frontend
          # doesnt work
           xcodebuild -project frontend.xcodeproj -scheme frontend test CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO
